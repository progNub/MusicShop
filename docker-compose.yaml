version: "3.12"

services:

  cache-redis:
    container_name: cache-redis
    image: redis:7.2.4-alpine

  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - "./compose/pg_data:/var/lib/postgresql/data"


  django-musical-store:
    image: musical_store:0.1
    build:
      context: .
      dockerfile: Dockerfile
    container_name: musical_store
    env_file:
      - '.env'
    environment:
      DATABASE_HOST: db
      REDIS_CACHE_URL: "redis://cache-redis:6379"
    command: /bin/sh run.sh
    volumes:
      - './logs:/app/logs'
    depends_on:
      - db


  minio:
    image: minio/minio
    container_name: minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
    volumes:
      - './compose/minio-data:/data'
    command: server /data --address 0.0.0.0:9000 --console-address 0.0.0.0:9001


  minio-client:
    image: minio/mc:latest
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host rm expo;
      /usr/bin/mc config host add --quiet --api s3v4 local http://minio:9000 ${MINIO_ACCESS_KEY} ${MINIO_SECRET_KEY};
      /usr/bin/mc rb --force local/${MINIO_BUCKET_NAME}/;
      /usr/bin/mc mb --quiet local/${MINIO_BUCKET_NAME}/;
      /usr/bin/mc policy set public local/${MINIO_BUCKET_NAME};
      "
    depends_on:
      - minio

  nginx-minio:
    image: nginx:1.25.4-alpine
    container_name: nginx-minio-server
    volumes:
      - "./service/nginx_minio.conf:/etc/nginx/conf.d/default.conf:ro"
    ports:
      - "9000:9000"
      - "9001:9001"
    depends_on:
      - minio


  nginx:
    image: nginx:1.25.4-alpine
    container_name: nginx_server
    ports:
      - "80:80"
    volumes:
      - "./service/nginx.conf:/etc/nginx/conf.d/default.conf:ro"
      - "./static:/var/www/static:ro"
    depends_on:
      - django-musical-store

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command: --config.file=/etc/prometheus/prometheus.yaml
    volumes:
      - "./compose/prometheus.yaml:/etc/prometheus/prometheus.yaml"
    ports:
      - "9090:9090"
    depends_on:
    - django-musical-store





